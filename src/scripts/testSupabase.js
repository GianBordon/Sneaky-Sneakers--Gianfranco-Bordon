// Script para verificar la conexi√≥n con Supabase
import dotenv from 'dotenv';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

// Configurar dotenv
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
dotenv.config({ path: join(__dirname, '../../.env') });

import { createClient } from '@supabase/supabase-js';

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY;

console.log('üîç Verificando configuraci√≥n de Supabase...');
console.log('URL:', supabaseUrl ? '‚úÖ Configurada' : '‚ùå No configurada');
console.log('Key:', supabaseKey ? '‚úÖ Configurada' : '‚ùå No configurada');

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Variables de entorno de Supabase no encontradas');
  console.log('üí° Aseg√∫rate de que el archivo .env existe y contiene:');
  console.log('   VITE_SUPABASE_URL=tu-url-de-supabase');
  console.log('   VITE_SUPABASE_ANON_KEY=tu-anon-key');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function testConnection() {
  try {
    console.log('\nüîÑ Probando conexi√≥n con Supabase...');
    
    // Probar conexi√≥n b√°sica
    const { data, error } = await supabase
      .from('products')
      .select('count')
      .limit(1);
    
    if (error) {
      if (error.code === 'PGRST116') {
        console.log('‚ö†Ô∏è  Tabla "products" no existe (normal si es la primera vez)');
        console.log('‚úÖ Conexi√≥n con Supabase exitosa');
      } else {
        console.error('‚ùå Error de conexi√≥n:', error.message);
        process.exit(1);
      }
    } else {
      console.log('‚úÖ Conexi√≥n con Supabase exitosa');
      console.log('‚úÖ Tabla "products" accesible');
    }
    
    // Probar autenticaci√≥n
    const { data: authData, error: authError } = await supabase.auth.getSession();
    if (authError) {
      console.log('‚ö†Ô∏è  Error de autenticaci√≥n:', authError.message);
    } else {
      console.log('‚úÖ Autenticaci√≥n configurada correctamente');
    }
    
    console.log('\nüéâ Configuraci√≥n de Supabase verificada exitosamente!');
    console.log('üìù Variables de entorno:');
    console.log(`   URL: ${supabaseUrl.substring(0, 30)}...`);
    console.log(`   Key: ${supabaseKey.substring(0, 20)}...`);
    
  } catch (error) {
    console.error('‚ùå Error general:', error.message);
    process.exit(1);
  }
}

testConnection(); 